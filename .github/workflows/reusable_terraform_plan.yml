on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
      aws_region:
        type: string
        default: 'ap-southeast-2'
      environment:
        required: true
        type: string

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.8.2'
          
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Echo inputs
        run: echo "Directory ${{ inputs.directory }}, Environment ${{ inputs.environment }}, Region ${{ inputs.aws_region }}"
      
      - name: Check for changes in the specified directory
        id: check_changes
        run: |
          echo "Checking for changes in the ${{ inputs.directory }} directory..."
          cd ${{ github.workspace }}
          # check for changes in the specified directory
          # HEAD^(the parent of the current commit) and  HEAD (the current commit itself) are the points of comparison
          CHANGES=$(git diff --name-only HEAD^ HEAD -- ${{ inputs.directory }}/)
          if [ -z "$CHANGES" ]; then
            echo "No changes in ${{ inputs.directory }} directory."
            echo "::set-output name=changes::false"
          else
            echo "Changes detected in ${{ inputs.directory }} directory."
            echo "::set-output name=changes::true"
          fi

      - name: Setup AWS Credentials
        if: steps.check_changes.outputs.changes == 'true'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws_region }}
        
      - name: Verify AWS
        if: steps.check_changes.outputs.changes == 'true'
        run: aws sts get-caller-identity

      - name: Initialize Terraform and Terraform plan
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          terraform -chdir=${{ inputs.directory }} init &&
          terraform -chdir=${{ inputs.directory }} plan -var-file=${{ inputs.environment }}.tfvars -out=../${{ inputs.directory }}.tfplan -input=false | tee ${{ inputs.directory }}.tfplan.txt

      - name: Upload Terraform Plan
        if: steps.check_changes.outputs.changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.directory }}-plans
          path: |
            ${{ inputs.directory }}.tfplan
            ${{ inputs.directory }}.tfplan.txt
          continue-on-error: true